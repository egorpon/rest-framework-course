openapi: 3.0.3
info:
  title: E-Commerce API
  version: 1.0.0
  description: A simple Product & Order API that help learn Django REST Framework
paths:
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /orders/:
    get:
      operationId: orders_list
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: string
          enum:
          - Cancelled
          - Confirmed
          - Pending
        description: |-
          * `Pending` - Pending
          * `Confirmed` - Confirmed
          * `Cancelled` - Cancelled
      tags:
      - orders
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: orders_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
          description: ''
  /orders/{order_id}/:
    get:
      operationId: orders_retrieve
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orders_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
          description: ''
    patch:
      operationId: orders_partial_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_destroy
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /products/:
    get:
      operationId: products_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: name__iexact
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: price
        schema:
          type: number
      - in: query
        name: price__gt
        schema:
          type: number
      - in: query
        name: price__lt
        schema:
          type: number
      - in: query
        name: price__range
        schema:
          type: array
          items:
            type: number
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{product_id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_update
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /products/info/:
    get:
      operationId: products_info_retrieve
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Order:
      type: object
      properties:
        order_id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        total_price:
          type: string
          readOnly: true
      required:
      - created_at
      - items
      - order_id
      - total_price
      - user
    OrderCreate:
      type: object
      properties:
        order_id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
      required:
      - order_id
      - user
    OrderItem:
      type: object
      properties:
        product_name:
          type: string
        product_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        item_subtotal:
          type: string
          readOnly: true
      required:
      - item_subtotal
      - product_name
      - product_price
      - quantity
    OrderItemCreate:
      type: object
      properties:
        product:
          type: integer
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - product
      - quantity
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PatchedOrder:
      type: object
      properties:
        order_id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        total_price:
          type: string
          readOnly: true
    PatchedProduct:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
    Product:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - description
      - name
      - price
      - stock
    StatusEnum:
      enum:
      - Pending
      - Confirmed
      - Cancelled
      type: string
      description: |-
        * `Pending` - Pending
        * `Confirmed` - Confirmed
        * `Cancelled` - Cancelled
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        password:
          type: string
          maxLength: 128
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
        is_authenticated:
          type: string
          readOnly: true
        get_full_name:
          type: string
          readOnly: true
        user_orders:
          type: array
          items:
            type: string
            format: uuid
      required:
      - get_full_name
      - is_authenticated
      - password
      - user_orders
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
